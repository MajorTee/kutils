buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

plugins {
    id 'com.github.ben-manes.versions' version '0.20.0'
    id "com.jfrog.bintray" version "1.8.4"
    id "io.gitlab.arturbosch.detekt" version "1.0.0-RC12"
    id 'org.sonarqube' version '2.7'
}

apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'kotlin'

apply plugin: 'io.gitlab.arturbosch.detekt'

group 'io.gitlab.arturbosch'
version kutilsVersion

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: uri('../repo'))
        }
    }
}

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xuse-experimental=kotlin.Experimental"]
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

detekt {
    config = files("$projectDir/detekt/config.yml")
    baseline = file("$projectDir/baseline.xml")

    reports {
        html {
            enabled = true
            destination = file("$rootDir/detekt.html")
        }
    }
}

dependencies {
    detektPlugins "io.gitlab.arturbosch.detekt:detekt-formatting:$detektVersion"
    compileOnly "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    testCompile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    testCompile "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"
    testCompile "io.kotlintest:kotlintest-runner-junit5:$kotlintestVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitEngineVersion"
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

bintray {
    user = System.getenv("BINTRAY_USER") ?: ""
    key = System.getenv("BINTRAY_API_KEY") ?: ""
    publications = ["kutils"]

    pkg {
        repo = 'generic'
        name = 'kutils'
        userOrg = 'arturbosch'
        licenses = ['Apache-2.0']
        vcsUrl = "https://github.com/arturbosch/kutils"

        version {
            name = project.version
            released = new Date()
        }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

publishing {
    publications {
        kutils(MavenPublication) {
            artifact sourcesJar
            from components.java
            groupId project.group
            artifactId project.name
            version project.version
        }
    }
}
